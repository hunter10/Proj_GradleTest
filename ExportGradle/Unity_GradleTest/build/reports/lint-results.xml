<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 3.0.1">

    <issue
        id="MissingLeanbackSupport"
        severity="Error"
        message="Expecting &lt;uses-feature android:name=&quot;android.software.leanback&quot; android:required=&quot;false&quot; /> tag."
        category="Correctness"
        priority="6"
        summary="Missing Leanback Support."
        explanation="The manifest should declare the use of the Leanback user interface required by Android TV.&#xA;To fix this, add&#xA;`&lt;uses-feature android:name=&quot;android.software.leanback&quot;   android:required=&quot;false&quot; />`&#xA;to your manifest."
        url="https://developer.android.com/training/tv/start/start.html#leanback-req"
        urls="https://developer.android.com/training/tv/start/start.html#leanback-req"
        errorLine1="&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.hunter10.gradletest&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:versionName=&quot;1.0&quot; android:versionCode=&quot;1&quot; android:installLocation=&quot;preferExternal&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="  &lt;uses-sdk android:minSdkVersion=&quot;16&quot; android:targetSdkVersion=&quot;23&quot; />"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="14"
            column="40"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility &#xA;modes apply. Consider testing and updating this version. &#xA;Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="  targetSdkVersion 23"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\build.gradle"
            line="39"
            column="3"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `banner` is only used in API level 21 and higher (current min is 16)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="  &lt;application android:theme=&quot;@style/UnityThemeSelector&quot; android:icon=&quot;@drawable/app_icon&quot; android:label=&quot;@string/app_name&quot; android:isGame=&quot;true&quot; android:banner=&quot;@drawable/app_banner&quot;>"
        errorLine2="                                                                                                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="4"
            column="147"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `isGame` is only used in API level 21 and higher (current min is 16)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="  &lt;application android:theme=&quot;@style/UnityThemeSelector&quot; android:icon=&quot;@drawable/app_icon&quot; android:label=&quot;@string/app_name&quot; android:isGame=&quot;true&quot; android:banner=&quot;@drawable/app_banner&quot;>"
        errorLine2="                                                                                                                            ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="4"
            column="125"/>
    </issue>

    <issue
        id="ManifestOrder"
        severity="Warning"
        message="`&lt;uses-sdk>` tag appears after `&lt;application>` tag"
        category="Correctness"
        priority="5"
        summary="Incorrect order of elements in manifest"
        explanation="The &lt;application> tag should appear after the elements which declare which version you need, which features you need, which libraries you need, and so on. In the past there have been subtle bugs (such as themes not getting applied correctly) when the `&lt;application>` tag appears before some of these other elements, so it&apos;s best to order your manifest in the logical dependency order."
        errorLine1="  &lt;uses-sdk android:minSdkVersion=&quot;16&quot; android:targetSdkVersion=&quot;23&quot; />"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="14"
            column="3"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.android.tools.build:gradle than 3.0.1 is available: 3.1.2"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="  classpath &apos;com.android.tools.build:gradle:3.0.1&apos;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\build.gradle"
            line="12"
            column="3"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This `targetSdkVersion` value (`23`) is not used; it is always overridden by the value specified in the Gradle build script (`23`)"
        category="Correctness"
        priority="4"
        summary="Value overridden by Gradle build script"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="  &lt;uses-sdk android:minSdkVersion=&quot;16&quot; android:targetSdkVersion=&quot;23&quot; />"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="14"
            column="40"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.&#xA;&#xA;This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="  &lt;application android:theme=&quot;@style/UnityThemeSelector&quot; android:icon=&quot;@drawable/app_icon&quot; android:label=&quot;@string/app_name&quot; android:isGame=&quot;true&quot; android:banner=&quot;@drawable/app_banner&quot;>"
        errorLine2="  ^"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="4"
            column="3"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set `android:allowBackup` to `true` or `false` (it&apos;s `true` by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.&#xA;&#xA;This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="  &lt;application android:theme=&quot;@style/UnityThemeSelector&quot; android:icon=&quot;@drawable/app_icon&quot; android:label=&quot;@string/app_name&quot; android:isGame=&quot;true&quot; android:banner=&quot;@drawable/app_banner&quot;>"
        errorLine2="  ^"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="4"
            column="3"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="This folder configuration (`v14`) is unnecessary; `minSdkVersion` is 16. Merge all the resources in this folder into `values`."
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\res\values-v14"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-mdpi`: app_banner.png (found in drawable-xhdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\res\drawable-mdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xhdpi`: app_icon.png (found in drawable-mdpi)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\res\drawable-xhdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src\\main\\res`: drawable-hdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\res"/>
    </issue>

    <issue
        id="GoogleAppIndexingWarning"
        severity="Warning"
        message="App is not indexable by Google Search; consider adding at least one Activity with an ACTION-VIEW intent filter. See issue explanation for more details."
        category="Usability"
        priority="5"
        summary="Missing support for Firebase App Indexing"
        explanation="Adds URLs to get your app into the Google index, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="  &lt;application android:theme=&quot;@style/UnityThemeSelector&quot; android:icon=&quot;@drawable/app_icon&quot; android:label=&quot;@string/app_name&quot; android:isGame=&quot;true&quot; android:banner=&quot;@drawable/app_banner&quot;>"
        errorLine2="  ^"
        quickfix="studio">
        <location
            file="D:\Work_Test\Proj_GradleTest\ExportGradle\Unity_GradleTest\src\main\AndroidManifest.xml"
            line="4"
            column="3"/>
    </issue>

</issues>
